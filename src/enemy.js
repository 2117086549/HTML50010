Crafty.c("Enemy",{tileMap:undefined,Enemy:function(a){var c=250;this.requires("SpriteAnimation, Collision, Grid").reel("walk_left",c,[[0,2],[1,2],[2,2]]).reel("walk_right",c,[[0,3],[1,3],[2,3]]).reel("walk_up",c,[[0,1],[1,1],[2,1]]).reel("walk_down",c,[[0,0],[1,0],[2,0]]);this.tileMap=a;var b=this.tileMap.spawnRelativeToEdge("random");this.attr({x:b.x,y:b.y});this.newTarget();return this},init:function(){this.requires("2D "+_Globals.conf.get("renderType"));this.target={x:undefined,y:undefined,obj:undefined,path:undefined,pathpos:0};this.digCarrot={canPull:false,obj:undefined};this.pushedProps={pushed:false,atFrame:0}},newTarget:function(c){if(!c){var b=this.tileMap.findFreeCarrot({x:this.x,y:this.y});if(b){if(_Globals.conf.get("trace")){console.log("Enemy:"+this[0]+" new target coords "+b[0]+" XY:"+b.x+","+b.y+" occ: "+b.occupied)}this.target.x=b.x;this.target.y=b.y;this.target.obj=b;this.target.obj.occupied=true}else{c=true}}if(c){var a=this.tileMap.spawnAtRandom();this.target.x=a.x;this.target.y=a.y;this.target.obj=undefined}this.target.path=this.tileMap.getPathToTilePx({x:this.x,y:this.y},{x:this.target.x,y:this.target.y});this.target.pathpos=0;if(this.digCarrot.canPull){this.digCarrot.canPull=false;this.digCarrot.obj=undefined}return this}});Enemy=ActorObject.extend({defaults:{tileMap:undefined,speed:2,pullSpeed:2.25,pushCooldown:30,spriteHeight:48,"z-index":10,spriteHalfHeight:24,spriteHalfWidth:16,},initialize:function(){var b=this;b.set("sprite-z",b.get("spriteHeight")+b.get("z-index"));var a=Crafty.e("2D, "+_Globals.conf.get("renderType")+", Enemy, enemy").attr({move:{left:false,right:false,up:false,down:false},z:b.get("sprite-z"),speed:b.get("speed")}).Enemy(b.get("tileMap")).bind("EnterFrame",function(k){if(this.pushedProps.pushed){if(!this.pushedProps.atFrame){this.pushedProps.atFrame=k.frame+b.get("pushCooldown");return}if(this.pushedProps.atFrame>k.frame){return}this.newTarget();this.pushedProps.pushed=false}if(this.digCarrot.canPull){this.pauseAnimation();this.digCarrot.obj.health-=b.get("pullSpeed");if(this.digCarrot.obj.health<=0){this.digCarrot.canPull=false;this.digCarrot.obj.pulled=true;this.digCarrot.obj.destroy();var j=b.get("player").get("pullID");if(j&&j==this.digCarrot.obj[0]){if(_Globals.conf.get("sfx")){if(_Globals.conf.get("sfx")){if(Date.now()%2==0){Crafty.audio.play("laughter1",1,_Globals.conf.get("sfx_vol"))}else{Crafty.audio.play("laughter2",1,_Globals.conf.get("sfx_vol"))}}}}this.newTarget()}return}this.move.up=this.move.down=this.move.left=this.move.right=false;var n=(this.x+16);var l=(this.y+32);var i;var f;var r=false;if(this.target.pathpos==this.target.path.length){if(this.target.obj){i=this.target.x+16;f=this.target.y+16;r=true}else{this.newTarget();return}}else{var h=this.target.path[this.target.pathpos].pos.y;var e=this.target.path[this.target.pathpos].pos.x;i=h*this.tileMap.get("tileSize")+32;f=e*this.tileMap.get("tileSize")+32;var t=(i-n);var s=(f-l);var m=(t*t+s*s);if(m<64){this.target.pathpos+=1}}if(n<i){this.move.right=true}else{if(n>i){this.move.left=true}}if(l<f){this.move.down=true}else{if(l>f){this.move.up=true}}var q=this.move.up||this.move.down||this.move.left||this.move.right;if(this.move.up){this.y-=this.speed}if(this.move.down){this.y+=this.speed}if(this.move.left){this.x-=this.speed}if(this.move.right){this.x+=this.speed}if(q){if(this.move.left){if(!this.isPlaying("walk_left")){this.animate("walk_left",-1)}}else{if(this.move.right){if(!this.isPlaying("walk_right")){this.animate("walk_right",-1)}}else{if(this.move.up){if(!this.isPlaying("walk_up")){this.animate("walk_up",-1)}}else{if(this.move.down){if(!this.isPlaying("walk_down")){this.animate("walk_down",-1)}}}}}}else{this.pauseAnimation()}this.attr({z:this.y+b.get("sprite-z")});if(r){var d=n-this.target.x+16;var c=l-this.target.y+16;var p=(d*d+c*c);if(p<=2048){var o=this.hit("carrot");if(!o){if(_Globals.conf.get("debug")){console.log("not hit! dist: %d / target: %d",p,this.target.obj!=undefined);console.log("target-dist: %d, my-xy: %d,%d / target-xy: %d,%d",p,n,l,this.target.x+16,this.target.y+16)}this.newTarget();return}var g=o[0].obj;if(_Globals.conf.get("trace")){console.log("Enemy: %d has reached %d",this[0],g[0])}if(_Globals.conf.get("trace")){console.log("Enemy: carrot %d hit & occupied!",g[0])}this.digCarrot.obj=g;this.digCarrot.canPull=true}else{this.digCarrot.canPull=false;this.digCarrot.obj=undefined}}}).bind("PushBack",function(d){if(_Globals.conf.get("trace")){console.log("Enemy: %d is pushed back",this[0])}var h=this.x;var g=this.y;var c=this.x+b.get("spriteHalfWidth"),i=this.y+b.get("spriteHalfHeight");var f=d.amount;if(this.move.up&&d.y<this.y){g+=f}else{if(this.move.up&&d.y>i){g-=f}else{if(this.move.down&&d.y<i){g+=f}else{if(this.move.down&&d.y>i){g-=f}}}}if(this.move.left&&d.x<c){h+=f}else{if(this.move.left&&d.x>c){h-=f}}if(this.move.right&&d.x<c){h+=f}if(this.move.right&&d.x>c){h-=f}var e=this.tileMap.spawnAtPx(h,g);this.attr({x:e.x,y:e.y});this.pushedProps.pushed=true;this.pushedProps.atFrame=undefined;this.pauseAnimation()}).bind("ForkBeacon",function(c){if(_Globals.conf.get("trace")){console.log("Enemy: %d is forked",this[0])}this.target.x=c.x;this.target.y=c.y;this.target.path=this.tileMap.getPathToTilePx({x:this.x,y:this.y},{x:this.target.x,y:this.target.y});this.target.pathpos=0}).collision([2,32],[30,32],[30,48],[2,48]);b.set({entity:a})}});